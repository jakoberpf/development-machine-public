---
- name: Preprare Development Machine
  hosts: machine

  tasks:
    - name: Install packages only when the apt process is not locked
      become: yes
      apt:
        pkg:
          - git
          - gcc
          - python3-dev
          - python3-venv
          - libffi-dev
          - libssl-dev
        state: present
      register: apt_action
      retries: 100
      until: apt_action is success or ('Failed to lock apt for exclusive operation' not in apt_action.msg and '/var/lib/dpkg/lock' not in apt_action.msg)

    - name: Add openstack VIP and address to /etc/hosts
      become: yes
      lineinfile:
        dest: /etc/hosts
        regexp: ".*openstack.dev.jakoberpf.de$"
        line: "192.168.0.200 openstack.dev.jakoberpf.de"
        state: present

    - name: Setup virtual python enviroment for kolla openstack
      shell: python3 -m venv $HOME/kolla-openstack

    - name: Source virtual python env and install/update pip
      shell: source $HOME/kolla-openstack/bin/activate && pip install -U pip
      args:
        executable: /bin/bash

    - name: Source virtual python env and install ansible
      shell: source $HOME/kolla-openstack/bin/activate && pip install 'ansible<2.10' # actually <3.0 but broken
      args:
        executable: /bin/bash

    - name: Create ansible config
      shell: |
        cat << EOF > $HOME/ansible.cfg
        [defaults]
        host_key_checking=False
        pipelining=True
        forks=100
        EOF

    - name: Run source and install kolla-ansible
      shell: source $HOME/kolla-openstack/bin/activate && pip install kolla-ansible
      args:
        executable: /bin/bash

    - name: Create a directory for the kolla configs
      become: yes
      ansible.builtin.file:
        path: /etc/kolla
        state: directory

    - name: Set permissions of kolla configs
      become: yes
      command: chown jakoberpf:jakoberpf /etc/kolla

    - name: Copy globals
      become: yes
      ansible.builtin.copy:
        src: ../artifacts/kolla/globals.yml
        dest: /etc/kolla/globals.yml

    - name: Check if passwords exists on remote
      stat:
        path: /etc/kolla/passwords.yml
      register: stat_passwords_remote

    - name: Check if passwords exists on local
      local_action: stat path=../artifacts/kolla/passwords.yml
      register: stat_passwords_local

    - name: Copy sample passwords to hosts
      become: yes
      ansible.builtin.copy:
        src: ../artifacts/kolla/passwords.sample.yml
        dest: /etc/kolla/passwords.yml
      when: not stat_passwords_remote.stat.exists and not stat_passwords_local.stat.exists

    - name: Copy present passwords to hosts
      become: yes
      ansible.builtin.copy:
        src: ../artifacts/kolla/passwords.yml
        dest: /etc/kolla/passwords.yml
      when: stat_passwords_local.stat.exists

    # kolla-genpwd 

    - name: Copy passwords to local machine
      fetch:
        flat: yes
        src: /etc/kolla/passwords.yml
        dest: ../artifacts/kolla/passwords.yml

    - name: Copy inventory
      ansible.builtin.copy:
        remote_src: yes
        src: $HOME/kolla-openstack/share/kolla-ansible/ansible/inventory/all-in-one
        dest: .

    - name: Create a directory for the kolla configs
      become: yes
      ansible.builtin.file:
        path: /etc/kolla/config/octavia
        state: directory
        mode: 700

    - name: cp server_ca/private/ca.key.pem /etc/octavia/certs/server_ca.key.pem
      become: yes
      ansible.builtin.copy:
        src: ../artifacts/octavia/server_ca/private/ca.key.pem
        dest: /etc/kolla/config/octavia/server_ca.key.pem
        mode: 700

    - name: cp server_ca/certs/ca.cert.pem /etc/octavia/certs/server_ca.cert.pem
      become: yes
      ansible.builtin.copy:
        src: ../artifacts/octavia/server_ca/certs/ca.cert.pem
        dest: /etc/kolla/config/octavia/server_ca.cert.pem

    - name: cp client_ca/certs/ca.cert.pem /etc/octavia/certs/client_ca.cert.pem
      become: yes
      ansible.builtin.copy:
        src: ../artifacts/octavia/client_ca/certs/ca.cert.pem
        dest: /etc/kolla/config/octavia/client_ca.cert.pem

    - name: cp client_ca/private/client.cert-and-key.pem /etc/octavia/certs/client.cert-and-key.pem
      become: yes
      ansible.builtin.copy:
        src: ../artifacts/octavia/client_ca/private/client.cert-and-key.pem
        dest: /etc/kolla/config/octavia/client.cert-and-key.pem
        mode: 700

    # Run all as sudo su
    # source $HOME/kolla-openstack/bin/activate
    # kolla-ansible -i all-in-one bootstrap-servers
    # kolla-ansible -i all-in-one prechecks
    # kolla-ansible -i all-in-one deploy
    # kolla-ansible -i all-in-one post-deploy
    # kolla-ansible -i all-in-one check
    # after doing changes to config
    # kolla-ansible -i all-in-one reconfigure

    # https://docs.openstack.org/kolla-ansible/latest/reference/networking/octavia.html
    # https://docs.openstack.org/octavia/ussuri/admin/guides/certificates.html
    # https://fkpwolf.net/cloud/setup/2018/11/28/install-openstack-by-kolla.html
    # http://www.panticz.de/kolla-ansible
    # https://shreddedbacon.com/post/openstack-kolla/
    # https://superuser.openstack.org/articles/guide-octavia-ingress-controller-for-kubernetes/
    # https://www.headdesk.me/Install_Octavia_software_load_balancer_for_openstack
    # https://cloudbase.it/openstack-on-arm64-lbaas/
    # https://openstack.nimeyo.com/101221/openstack-neutron-lbaasv2-octavia-able-create-loadbalancer